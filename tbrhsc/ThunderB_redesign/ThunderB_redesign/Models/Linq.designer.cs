#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.33440
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThunderB_redesign.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tbrhsc")]
	public partial class LinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void Insertdepartment(department instance);
    partial void Updatedepartment(department instance);
    partial void Deletedepartment(department instance);
    partial void Insertproduct_category(product_category instance);
    partial void Updateproduct_category(product_category instance);
    partial void Deleteproduct_category(product_category instance);
    partial void Insertpage(page instance);
    partial void Updatepage(page instance);
    partial void Deletepage(page instance);
    partial void Insertdoctor(doctor instance);
    partial void Updatedoctor(doctor instance);
    partial void Deletedoctor(doctor instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertmenu_category(menu_category instance);
    partial void Updatemenu_category(menu_category instance);
    partial void Deletemenu_category(menu_category instance);
    partial void Insertdonor(donor instance);
    partial void Updatedonor(donor instance);
    partial void Deletedonor(donor instance);
    partial void Inserttriage(triage instance);
    partial void Updatetriage(triage instance);
    partial void Deletetriage(triage instance);
    partial void InsertAlertTable(AlertTable instance);
    partial void UpdateAlertTable(AlertTable instance);
    partial void DeleteAlertTable(AlertTable instance);
    partial void Insertfaq(faq instance);
    partial void Updatefaq(faq instance);
    partial void Deletefaq(faq instance);
    partial void Insertdonation(donation instance);
    partial void Updatedonation(donation instance);
    partial void Deletedonation(donation instance);
    partial void InsertnewsTable(newsTable instance);
    partial void UpdatenewsTable(newsTable instance);
    partial void DeletenewsTable(newsTable instance);
    partial void Insertfeedback(feedback instance);
    partial void Updatefeedback(feedback instance);
    partial void Deletefeedback(feedback instance);
    partial void Insertemergency_level(emergency_level instance);
    partial void Updateemergency_level(emergency_level instance);
    partial void Deleteemergency_level(emergency_level instance);
    partial void Insertsubscriber(subscriber instance);
    partial void Updatesubscriber(subscriber instance);
    partial void Deletesubscriber(subscriber instance);
    partial void InsertjobCategory(jobCategory instance);
    partial void UpdatejobCategory(jobCategory instance);
    partial void DeletejobCategory(jobCategory instance);
    partial void InsertjobApplication(jobApplication instance);
    partial void UpdatejobApplication(jobApplication instance);
    partial void DeletejobApplication(jobApplication instance);
    partial void Insertappointment(appointment instance);
    partial void Updateappointment(appointment instance);
    partial void Deleteappointment(appointment instance);
    #endregion
		
		public LinqDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["tbrhsc"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<department> departments
		{
			get
			{
				return this.GetTable<department>();
			}
		}
		
		public System.Data.Linq.Table<product_category> product_categories
		{
			get
			{
				return this.GetTable<product_category>();
			}
		}
		
		public System.Data.Linq.Table<page> pages
		{
			get
			{
				return this.GetTable<page>();
			}
		}
		
		public System.Data.Linq.Table<doctor> doctors
		{
			get
			{
				return this.GetTable<doctor>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<menu_category> menu_categories
		{
			get
			{
				return this.GetTable<menu_category>();
			}
		}
		
		public System.Data.Linq.Table<donor> donors
		{
			get
			{
				return this.GetTable<donor>();
			}
		}
		
		public System.Data.Linq.Table<triage> triages
		{
			get
			{
				return this.GetTable<triage>();
			}
		}
		
		public System.Data.Linq.Table<AlertTable> AlertTables
		{
			get
			{
				return this.GetTable<AlertTable>();
			}
		}
		
		public System.Data.Linq.Table<faq> faqs
		{
			get
			{
				return this.GetTable<faq>();
			}
		}
		
		public System.Data.Linq.Table<donation> donations
		{
			get
			{
				return this.GetTable<donation>();
			}
		}
		
		public System.Data.Linq.Table<newsTable> newsTables
		{
			get
			{
				return this.GetTable<newsTable>();
			}
		}
		
		public System.Data.Linq.Table<feedback> feedbacks
		{
			get
			{
				return this.GetTable<feedback>();
			}
		}
		
		public System.Data.Linq.Table<emergency_level> emergency_levels
		{
			get
			{
				return this.GetTable<emergency_level>();
			}
		}
		
		public System.Data.Linq.Table<subscriber> subscribers
		{
			get
			{
				return this.GetTable<subscriber>();
			}
		}
		
		public System.Data.Linq.Table<jobCategory> jobCategories
		{
			get
			{
				return this.GetTable<jobCategory>();
			}
		}
		
		public System.Data.Linq.Table<jobApplication> jobApplications
		{
			get
			{
				return this.GetTable<jobApplication>();
			}
		}
		
		public System.Data.Linq.Table<appointment> appointments
		{
			get
			{
				return this.GetTable<appointment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _job_title;
		
		private int _category_id;
		
		private System.DateTime _closing_date;
		
		private string _job_description;
		
		private System.DateTime _date_posted;
		
		private EntitySet<jobApplication> _jobApplications;
		
		private EntityRef<jobCategory> _jobCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onjob_titleChanging(string value);
    partial void Onjob_titleChanged();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void Onclosing_dateChanging(System.DateTime value);
    partial void Onclosing_dateChanged();
    partial void Onjob_descriptionChanging(string value);
    partial void Onjob_descriptionChanged();
    partial void Ondate_postedChanging(System.DateTime value);
    partial void Ondate_postedChanged();
    #endregion
		
		public Job()
		{
			this._jobApplications = new EntitySet<jobApplication>(new Action<jobApplication>(this.attach_jobApplications), new Action<jobApplication>(this.detach_jobApplications));
			this._jobCategory = default(EntityRef<jobCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string job_title
		{
			get
			{
				return this._job_title;
			}
			set
			{
				if ((this._job_title != value))
				{
					this.Onjob_titleChanging(value);
					this.SendPropertyChanging();
					this._job_title = value;
					this.SendPropertyChanged("job_title");
					this.Onjob_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int NOT NULL")]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._jobCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closing_date", DbType="DateTime NOT NULL")]
		public System.DateTime closing_date
		{
			get
			{
				return this._closing_date;
			}
			set
			{
				if ((this._closing_date != value))
				{
					this.Onclosing_dateChanging(value);
					this.SendPropertyChanging();
					this._closing_date = value;
					this.SendPropertyChanged("closing_date");
					this.Onclosing_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string job_description
		{
			get
			{
				return this._job_description;
			}
			set
			{
				if ((this._job_description != value))
				{
					this.Onjob_descriptionChanging(value);
					this.SendPropertyChanging();
					this._job_description = value;
					this.SendPropertyChanged("job_description");
					this.Onjob_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_posted", DbType="DateTime NOT NULL")]
		public System.DateTime date_posted
		{
			get
			{
				return this._date_posted;
			}
			set
			{
				if ((this._date_posted != value))
				{
					this.Ondate_postedChanging(value);
					this.SendPropertyChanging();
					this._date_posted = value;
					this.SendPropertyChanged("date_posted");
					this.Ondate_postedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_jobApplication", Storage="_jobApplications", ThisKey="Id", OtherKey="job_id")]
		public EntitySet<jobApplication> jobApplications
		{
			get
			{
				return this._jobApplications;
			}
			set
			{
				this._jobApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jobCategory_Job", Storage="_jobCategory", ThisKey="category_id", OtherKey="Id", IsForeignKey=true)]
		public jobCategory jobCategory
		{
			get
			{
				return this._jobCategory.Entity;
			}
			set
			{
				jobCategory previousValue = this._jobCategory.Entity;
				if (((previousValue != value) 
							|| (this._jobCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jobCategory.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._jobCategory.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._category_id = value.Id;
					}
					else
					{
						this._category_id = default(int);
					}
					this.SendPropertyChanged("jobCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jobApplications(jobApplication entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_jobApplications(jobApplication entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.departments")]
	public partial class department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _dept_name;
		
		private string _dept_description;
		
		private EntitySet<doctor> _doctors;
		
		private EntitySet<doctor> _doctors1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondept_nameChanging(string value);
    partial void Ondept_nameChanged();
    partial void Ondept_descriptionChanging(string value);
    partial void Ondept_descriptionChanged();
    #endregion
		
		public department()
		{
			this._doctors = new EntitySet<doctor>(new Action<doctor>(this.attach_doctors), new Action<doctor>(this.detach_doctors));
			this._doctors1 = new EntitySet<doctor>(new Action<doctor>(this.attach_doctors1), new Action<doctor>(this.detach_doctors1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string dept_name
		{
			get
			{
				return this._dept_name;
			}
			set
			{
				if ((this._dept_name != value))
				{
					this.Ondept_nameChanging(value);
					this.SendPropertyChanging();
					this._dept_name = value;
					this.SendPropertyChanged("dept_name");
					this.Ondept_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string dept_description
		{
			get
			{
				return this._dept_description;
			}
			set
			{
				if ((this._dept_description != value))
				{
					this.Ondept_descriptionChanging(value);
					this.SendPropertyChanging();
					this._dept_description = value;
					this.SendPropertyChanged("dept_description");
					this.Ondept_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="department_doctor", Storage="_doctors", ThisKey="id", OtherKey="dept_id")]
		public EntitySet<doctor> doctors
		{
			get
			{
				return this._doctors;
			}
			set
			{
				this._doctors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="department_doctor1", Storage="_doctors1", ThisKey="id", OtherKey="dept_id")]
		public EntitySet<doctor> doctors1
		{
			get
			{
				return this._doctors1;
			}
			set
			{
				this._doctors1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_doctors(doctor entity)
		{
			this.SendPropertyChanging();
			entity.department = this;
		}
		
		private void detach_doctors(doctor entity)
		{
			this.SendPropertyChanging();
			entity.department = null;
		}
		
		private void attach_doctors1(doctor entity)
		{
			this.SendPropertyChanging();
			entity.department1 = this;
		}
		
		private void detach_doctors1(doctor entity)
		{
			this.SendPropertyChanging();
			entity.department1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_category")]
	public partial class product_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _prd_cat_id;
		
		private string _prd_cat_name;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprd_cat_idChanging(int value);
    partial void Onprd_cat_idChanged();
    partial void Onprd_cat_nameChanging(string value);
    partial void Onprd_cat_nameChanged();
    #endregion
		
		public product_category()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prd_cat_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int prd_cat_id
		{
			get
			{
				return this._prd_cat_id;
			}
			set
			{
				if ((this._prd_cat_id != value))
				{
					this.Onprd_cat_idChanging(value);
					this.SendPropertyChanging();
					this._prd_cat_id = value;
					this.SendPropertyChanged("prd_cat_id");
					this.Onprd_cat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prd_cat_name", DbType="VarChar(50)")]
		public string prd_cat_name
		{
			get
			{
				return this._prd_cat_name;
			}
			set
			{
				if ((this._prd_cat_name != value))
				{
					this.Onprd_cat_nameChanging(value);
					this.SendPropertyChanging();
					this._prd_cat_name = value;
					this.SendPropertyChanged("prd_cat_name");
					this.Onprd_cat_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_category_product", Storage="_products", ThisKey="prd_cat_id", OtherKey="prd_cat_id")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.product_category = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.product_category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pages")]
	public partial class page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _page_id;
		
		private int _user_id;
		
		private string _page_title;
		
		private string _page_content;
		
		private System.DateTime _page_created;
		
		private int _menu_id;
		
		private char _page_visibility;
		
		private string _page_slug;
		
		private string _meta_title;
		
		private string _meta_desc;
		
		private EntityRef<menu_category> _menu_category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpage_idChanging(int value);
    partial void Onpage_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onpage_titleChanging(string value);
    partial void Onpage_titleChanged();
    partial void Onpage_contentChanging(string value);
    partial void Onpage_contentChanged();
    partial void Onpage_createdChanging(System.DateTime value);
    partial void Onpage_createdChanged();
    partial void Onmenu_idChanging(int value);
    partial void Onmenu_idChanged();
    partial void Onpage_visibilityChanging(char value);
    partial void Onpage_visibilityChanged();
    partial void Onpage_slugChanging(string value);
    partial void Onpage_slugChanged();
    partial void Onmeta_titleChanging(string value);
    partial void Onmeta_titleChanged();
    partial void Onmeta_descChanging(string value);
    partial void Onmeta_descChanged();
    #endregion
		
		public page()
		{
			this._menu_category = default(EntityRef<menu_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int page_id
		{
			get
			{
				return this._page_id;
			}
			set
			{
				if ((this._page_id != value))
				{
					this.Onpage_idChanging(value);
					this.SendPropertyChanging();
					this._page_id = value;
					this.SendPropertyChanged("page_id");
					this.Onpage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string page_title
		{
			get
			{
				return this._page_title;
			}
			set
			{
				if ((this._page_title != value))
				{
					this.Onpage_titleChanging(value);
					this.SendPropertyChanging();
					this._page_title = value;
					this.SendPropertyChanged("page_title");
					this.Onpage_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_content", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string page_content
		{
			get
			{
				return this._page_content;
			}
			set
			{
				if ((this._page_content != value))
				{
					this.Onpage_contentChanging(value);
					this.SendPropertyChanging();
					this._page_content = value;
					this.SendPropertyChanged("page_content");
					this.Onpage_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_created", DbType="Date NOT NULL")]
		public System.DateTime page_created
		{
			get
			{
				return this._page_created;
			}
			set
			{
				if ((this._page_created != value))
				{
					this.Onpage_createdChanging(value);
					this.SendPropertyChanging();
					this._page_created = value;
					this.SendPropertyChanged("page_created");
					this.Onpage_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menu_id", DbType="Int NOT NULL")]
		public int menu_id
		{
			get
			{
				return this._menu_id;
			}
			set
			{
				if ((this._menu_id != value))
				{
					if (this._menu_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmenu_idChanging(value);
					this.SendPropertyChanging();
					this._menu_id = value;
					this.SendPropertyChanged("menu_id");
					this.Onmenu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_visibility", DbType="Char(1) NOT NULL")]
		public char page_visibility
		{
			get
			{
				return this._page_visibility;
			}
			set
			{
				if ((this._page_visibility != value))
				{
					this.Onpage_visibilityChanging(value);
					this.SendPropertyChanging();
					this._page_visibility = value;
					this.SendPropertyChanged("page_visibility");
					this.Onpage_visibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_slug", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string page_slug
		{
			get
			{
				return this._page_slug;
			}
			set
			{
				if ((this._page_slug != value))
				{
					this.Onpage_slugChanging(value);
					this.SendPropertyChanging();
					this._page_slug = value;
					this.SendPropertyChanged("page_slug");
					this.Onpage_slugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta_title", DbType="VarChar(100)")]
		public string meta_title
		{
			get
			{
				return this._meta_title;
			}
			set
			{
				if ((this._meta_title != value))
				{
					this.Onmeta_titleChanging(value);
					this.SendPropertyChanging();
					this._meta_title = value;
					this.SendPropertyChanged("meta_title");
					this.Onmeta_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta_desc", DbType="VarChar(250)")]
		public string meta_desc
		{
			get
			{
				return this._meta_desc;
			}
			set
			{
				if ((this._meta_desc != value))
				{
					this.Onmeta_descChanging(value);
					this.SendPropertyChanging();
					this._meta_desc = value;
					this.SendPropertyChanged("meta_desc");
					this.Onmeta_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="menu_category_page", Storage="_menu_category", ThisKey="menu_id", OtherKey="menu_id", IsForeignKey=true, DeleteRule="SET DEFAULT")]
		public menu_category menu_category
		{
			get
			{
				return this._menu_category.Entity;
			}
			set
			{
				menu_category previousValue = this._menu_category.Entity;
				if (((previousValue != value) 
							|| (this._menu_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._menu_category.Entity = null;
						previousValue.pages.Remove(this);
					}
					this._menu_category.Entity = value;
					if ((value != null))
					{
						value.pages.Add(this);
						this._menu_id = value.menu_id;
					}
					else
					{
						this._menu_id = default(int);
					}
					this.SendPropertyChanged("menu_category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctors")]
	public partial class doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dr_id;
		
		private string _dr_name;
		
		private string _dr_specialty;
		
		private string _dr_office_name;
		
		private string _dr_office_address;
		
		private string _dr_office_phone;
		
		private string _dr_photo;
		
		private int _user_id;
		
		private int _dept_id;
		
		private EntitySet<triage> _triages;
		
		private EntitySet<triage> _triages1;
		
		private EntitySet<appointment> _appointments;
		
		private EntitySet<appointment> _appointments1;
		
		private EntityRef<department> _department;
		
		private EntityRef<department> _department1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondr_idChanging(int value);
    partial void Ondr_idChanged();
    partial void Ondr_nameChanging(string value);
    partial void Ondr_nameChanged();
    partial void Ondr_specialtyChanging(string value);
    partial void Ondr_specialtyChanged();
    partial void Ondr_office_nameChanging(string value);
    partial void Ondr_office_nameChanged();
    partial void Ondr_office_addressChanging(string value);
    partial void Ondr_office_addressChanged();
    partial void Ondr_office_phoneChanging(string value);
    partial void Ondr_office_phoneChanged();
    partial void Ondr_photoChanging(string value);
    partial void Ondr_photoChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Ondept_idChanging(int value);
    partial void Ondept_idChanged();
    #endregion
		
		public doctor()
		{
			this._triages = new EntitySet<triage>(new Action<triage>(this.attach_triages), new Action<triage>(this.detach_triages));
			this._triages1 = new EntitySet<triage>(new Action<triage>(this.attach_triages1), new Action<triage>(this.detach_triages1));
			this._appointments = new EntitySet<appointment>(new Action<appointment>(this.attach_appointments), new Action<appointment>(this.detach_appointments));
			this._appointments1 = new EntitySet<appointment>(new Action<appointment>(this.attach_appointments1), new Action<appointment>(this.detach_appointments1));
			this._department = default(EntityRef<department>);
			this._department1 = default(EntityRef<department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dr_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int dr_id
		{
			get
			{
				return this._dr_id;
			}
			set
			{
				if ((this._dr_id != value))
				{
					this.Ondr_idChanging(value);
					this.SendPropertyChanging();
					this._dr_id = value;
					this.SendPropertyChanged("dr_id");
					this.Ondr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dr_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string dr_name
		{
			get
			{
				return this._dr_name;
			}
			set
			{
				if ((this._dr_name != value))
				{
					this.Ondr_nameChanging(value);
					this.SendPropertyChanging();
					this._dr_name = value;
					this.SendPropertyChanged("dr_name");
					this.Ondr_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dr_specialty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string dr_specialty
		{
			get
			{
				return this._dr_specialty;
			}
			set
			{
				if ((this._dr_specialty != value))
				{
					this.Ondr_specialtyChanging(value);
					this.SendPropertyChanging();
					this._dr_specialty = value;
					this.SendPropertyChanged("dr_specialty");
					this.Ondr_specialtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dr_office_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string dr_office_name
		{
			get
			{
				return this._dr_office_name;
			}
			set
			{
				if ((this._dr_office_name != value))
				{
					this.Ondr_office_nameChanging(value);
					this.SendPropertyChanging();
					this._dr_office_name = value;
					this.SendPropertyChanged("dr_office_name");
					this.Ondr_office_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dr_office_address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string dr_office_address
		{
			get
			{
				return this._dr_office_address;
			}
			set
			{
				if ((this._dr_office_address != value))
				{
					this.Ondr_office_addressChanging(value);
					this.SendPropertyChanging();
					this._dr_office_address = value;
					this.SendPropertyChanged("dr_office_address");
					this.Ondr_office_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dr_office_phone", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string dr_office_phone
		{
			get
			{
				return this._dr_office_phone;
			}
			set
			{
				if ((this._dr_office_phone != value))
				{
					this.Ondr_office_phoneChanging(value);
					this.SendPropertyChanging();
					this._dr_office_phone = value;
					this.SendPropertyChanged("dr_office_phone");
					this.Ondr_office_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dr_photo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string dr_photo
		{
			get
			{
				return this._dr_photo;
			}
			set
			{
				if ((this._dr_photo != value))
				{
					this.Ondr_photoChanging(value);
					this.SendPropertyChanging();
					this._dr_photo = value;
					this.SendPropertyChanged("dr_photo");
					this.Ondr_photoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_id", DbType="Int NOT NULL")]
		public int dept_id
		{
			get
			{
				return this._dept_id;
			}
			set
			{
				if ((this._dept_id != value))
				{
					if ((this._department.HasLoadedOrAssignedValue || this._department1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondept_idChanging(value);
					this.SendPropertyChanging();
					this._dept_id = value;
					this.SendPropertyChanged("dept_id");
					this.Ondept_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_triage", Storage="_triages", ThisKey="dr_id", OtherKey="dr_id")]
		public EntitySet<triage> triages
		{
			get
			{
				return this._triages;
			}
			set
			{
				this._triages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_triage1", Storage="_triages1", ThisKey="dr_id", OtherKey="dr_id")]
		public EntitySet<triage> triages1
		{
			get
			{
				return this._triages1;
			}
			set
			{
				this._triages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_appointment", Storage="_appointments", ThisKey="dr_id", OtherKey="dr_id")]
		public EntitySet<appointment> appointments
		{
			get
			{
				return this._appointments;
			}
			set
			{
				this._appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_appointment1", Storage="_appointments1", ThisKey="dr_id", OtherKey="dr_id")]
		public EntitySet<appointment> appointments1
		{
			get
			{
				return this._appointments1;
			}
			set
			{
				this._appointments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="department_doctor", Storage="_department", ThisKey="dept_id", OtherKey="id", IsForeignKey=true)]
		public department department
		{
			get
			{
				return this._department.Entity;
			}
			set
			{
				department previousValue = this._department.Entity;
				if (((previousValue != value) 
							|| (this._department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._department.Entity = null;
						previousValue.doctors.Remove(this);
					}
					this._department.Entity = value;
					if ((value != null))
					{
						value.doctors.Add(this);
						this._dept_id = value.id;
					}
					else
					{
						this._dept_id = default(int);
					}
					this.SendPropertyChanged("department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="department_doctor1", Storage="_department1", ThisKey="dept_id", OtherKey="id", IsForeignKey=true)]
		public department department1
		{
			get
			{
				return this._department1.Entity;
			}
			set
			{
				department previousValue = this._department1.Entity;
				if (((previousValue != value) 
							|| (this._department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._department1.Entity = null;
						previousValue.doctors1.Remove(this);
					}
					this._department1.Entity = value;
					if ((value != null))
					{
						value.doctors1.Add(this);
						this._dept_id = value.id;
					}
					else
					{
						this._dept_id = default(int);
					}
					this.SendPropertyChanged("department1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_triages(triage entity)
		{
			this.SendPropertyChanging();
			entity.doctor = this;
		}
		
		private void detach_triages(triage entity)
		{
			this.SendPropertyChanging();
			entity.doctor = null;
		}
		
		private void attach_triages1(triage entity)
		{
			this.SendPropertyChanging();
			entity.doctor1 = this;
		}
		
		private void detach_triages1(triage entity)
		{
			this.SendPropertyChanging();
			entity.doctor1 = null;
		}
		
		private void attach_appointments(appointment entity)
		{
			this.SendPropertyChanging();
			entity.doctor = this;
		}
		
		private void detach_appointments(appointment entity)
		{
			this.SendPropertyChanging();
			entity.doctor = null;
		}
		
		private void attach_appointments1(appointment entity)
		{
			this.SendPropertyChanging();
			entity.doctor1 = this;
		}
		
		private void detach_appointments1(appointment entity)
		{
			this.SendPropertyChanging();
			entity.doctor1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _prd_id;
		
		private string _prd_name;
		
		private string _prd_description;
		
		private decimal _prd_price;
		
		private int _prd_count;
		
		private System.Nullable<int> _prd_cat_id;
		
		private EntityRef<product_category> _product_category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprd_idChanging(int value);
    partial void Onprd_idChanged();
    partial void Onprd_nameChanging(string value);
    partial void Onprd_nameChanged();
    partial void Onprd_descriptionChanging(string value);
    partial void Onprd_descriptionChanged();
    partial void Onprd_priceChanging(decimal value);
    partial void Onprd_priceChanged();
    partial void Onprd_countChanging(int value);
    partial void Onprd_countChanged();
    partial void Onprd_cat_idChanging(System.Nullable<int> value);
    partial void Onprd_cat_idChanged();
    #endregion
		
		public product()
		{
			this._product_category = default(EntityRef<product_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prd_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int prd_id
		{
			get
			{
				return this._prd_id;
			}
			set
			{
				if ((this._prd_id != value))
				{
					this.Onprd_idChanging(value);
					this.SendPropertyChanging();
					this._prd_id = value;
					this.SendPropertyChanged("prd_id");
					this.Onprd_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prd_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string prd_name
		{
			get
			{
				return this._prd_name;
			}
			set
			{
				if ((this._prd_name != value))
				{
					this.Onprd_nameChanging(value);
					this.SendPropertyChanging();
					this._prd_name = value;
					this.SendPropertyChanged("prd_name");
					this.Onprd_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prd_description", DbType="VarChar(50)")]
		public string prd_description
		{
			get
			{
				return this._prd_description;
			}
			set
			{
				if ((this._prd_description != value))
				{
					this.Onprd_descriptionChanging(value);
					this.SendPropertyChanging();
					this._prd_description = value;
					this.SendPropertyChanged("prd_description");
					this.Onprd_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prd_price", DbType="Decimal(9,2) NOT NULL")]
		public decimal prd_price
		{
			get
			{
				return this._prd_price;
			}
			set
			{
				if ((this._prd_price != value))
				{
					this.Onprd_priceChanging(value);
					this.SendPropertyChanging();
					this._prd_price = value;
					this.SendPropertyChanged("prd_price");
					this.Onprd_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prd_count", DbType="Int NOT NULL")]
		public int prd_count
		{
			get
			{
				return this._prd_count;
			}
			set
			{
				if ((this._prd_count != value))
				{
					this.Onprd_countChanging(value);
					this.SendPropertyChanging();
					this._prd_count = value;
					this.SendPropertyChanged("prd_count");
					this.Onprd_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prd_cat_id", DbType="Int")]
		public System.Nullable<int> prd_cat_id
		{
			get
			{
				return this._prd_cat_id;
			}
			set
			{
				if ((this._prd_cat_id != value))
				{
					if (this._product_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprd_cat_idChanging(value);
					this.SendPropertyChanging();
					this._prd_cat_id = value;
					this.SendPropertyChanged("prd_cat_id");
					this.Onprd_cat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_category_product", Storage="_product_category", ThisKey="prd_cat_id", OtherKey="prd_cat_id", IsForeignKey=true)]
		public product_category product_category
		{
			get
			{
				return this._product_category.Entity;
			}
			set
			{
				product_category previousValue = this._product_category.Entity;
				if (((previousValue != value) 
							|| (this._product_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product_category.Entity = null;
						previousValue.products.Remove(this);
					}
					this._product_category.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._prd_cat_id = value.prd_cat_id;
					}
					else
					{
						this._prd_cat_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("product_category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="team5.menu_categories")]
	public partial class menu_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _menu_id;
		
		private string _menu_text;
		
		private int _parent_id;
		
		private string _menu_slug;
		
		private EntitySet<page> _pages;
		
		private EntitySet<menu_category> _menu_categories;
		
		private EntityRef<menu_category> _menu_category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmenu_idChanging(int value);
    partial void Onmenu_idChanged();
    partial void Onmenu_textChanging(string value);
    partial void Onmenu_textChanged();
    partial void Onparent_idChanging(int value);
    partial void Onparent_idChanged();
    partial void Onmenu_slugChanging(string value);
    partial void Onmenu_slugChanged();
    #endregion
		
		public menu_category()
		{
			this._pages = new EntitySet<page>(new Action<page>(this.attach_pages), new Action<page>(this.detach_pages));
			this._menu_categories = new EntitySet<menu_category>(new Action<menu_category>(this.attach_menu_categories), new Action<menu_category>(this.detach_menu_categories));
			this._menu_category1 = default(EntityRef<menu_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menu_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int menu_id
		{
			get
			{
				return this._menu_id;
			}
			set
			{
				if ((this._menu_id != value))
				{
					this.Onmenu_idChanging(value);
					this.SendPropertyChanging();
					this._menu_id = value;
					this.SendPropertyChanged("menu_id");
					this.Onmenu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menu_text", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string menu_text
		{
			get
			{
				return this._menu_text;
			}
			set
			{
				if ((this._menu_text != value))
				{
					this.Onmenu_textChanging(value);
					this.SendPropertyChanging();
					this._menu_text = value;
					this.SendPropertyChanged("menu_text");
					this.Onmenu_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int NOT NULL")]
		public int parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					if (this._menu_category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menu_slug", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string menu_slug
		{
			get
			{
				return this._menu_slug;
			}
			set
			{
				if ((this._menu_slug != value))
				{
					this.Onmenu_slugChanging(value);
					this.SendPropertyChanging();
					this._menu_slug = value;
					this.SendPropertyChanged("menu_slug");
					this.Onmenu_slugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="menu_category_page", Storage="_pages", ThisKey="menu_id", OtherKey="menu_id")]
		public EntitySet<page> pages
		{
			get
			{
				return this._pages;
			}
			set
			{
				this._pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="menu_category_menu_category", Storage="_menu_categories", ThisKey="menu_id", OtherKey="parent_id")]
		public EntitySet<menu_category> menu_categories
		{
			get
			{
				return this._menu_categories;
			}
			set
			{
				this._menu_categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="menu_category_menu_category", Storage="_menu_category1", ThisKey="parent_id", OtherKey="menu_id", IsForeignKey=true)]
		public menu_category menu_category1
		{
			get
			{
				return this._menu_category1.Entity;
			}
			set
			{
				menu_category previousValue = this._menu_category1.Entity;
				if (((previousValue != value) 
							|| (this._menu_category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._menu_category1.Entity = null;
						previousValue.menu_categories.Remove(this);
					}
					this._menu_category1.Entity = value;
					if ((value != null))
					{
						value.menu_categories.Add(this);
						this._parent_id = value.menu_id;
					}
					else
					{
						this._parent_id = default(int);
					}
					this.SendPropertyChanged("menu_category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pages(page entity)
		{
			this.SendPropertyChanging();
			entity.menu_category = this;
		}
		
		private void detach_pages(page entity)
		{
			this.SendPropertyChanging();
			entity.menu_category = null;
		}
		
		private void attach_menu_categories(menu_category entity)
		{
			this.SendPropertyChanging();
			entity.menu_category1 = this;
		}
		
		private void detach_menu_categories(menu_category entity)
		{
			this.SendPropertyChanging();
			entity.menu_category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.donor")]
	public partial class donor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dnr_id;
		
		private string _dnr_email;
		
		private string _dnr_name;
		
		private System.Nullable<char> _dnr_anonymous;
		
		private EntitySet<donation> _donations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondnr_idChanging(int value);
    partial void Ondnr_idChanged();
    partial void Ondnr_emailChanging(string value);
    partial void Ondnr_emailChanged();
    partial void Ondnr_nameChanging(string value);
    partial void Ondnr_nameChanged();
    partial void Ondnr_anonymousChanging(System.Nullable<char> value);
    partial void Ondnr_anonymousChanged();
    #endregion
		
		public donor()
		{
			this._donations = new EntitySet<donation>(new Action<donation>(this.attach_donations), new Action<donation>(this.detach_donations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dnr_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dnr_id
		{
			get
			{
				return this._dnr_id;
			}
			set
			{
				if ((this._dnr_id != value))
				{
					this.Ondnr_idChanging(value);
					this.SendPropertyChanging();
					this._dnr_id = value;
					this.SendPropertyChanged("dnr_id");
					this.Ondnr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dnr_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string dnr_email
		{
			get
			{
				return this._dnr_email;
			}
			set
			{
				if ((this._dnr_email != value))
				{
					this.Ondnr_emailChanging(value);
					this.SendPropertyChanging();
					this._dnr_email = value;
					this.SendPropertyChanged("dnr_email");
					this.Ondnr_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dnr_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string dnr_name
		{
			get
			{
				return this._dnr_name;
			}
			set
			{
				if ((this._dnr_name != value))
				{
					this.Ondnr_nameChanging(value);
					this.SendPropertyChanging();
					this._dnr_name = value;
					this.SendPropertyChanged("dnr_name");
					this.Ondnr_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dnr_anonymous", DbType="Char(1)")]
		public System.Nullable<char> dnr_anonymous
		{
			get
			{
				return this._dnr_anonymous;
			}
			set
			{
				if ((this._dnr_anonymous != value))
				{
					this.Ondnr_anonymousChanging(value);
					this.SendPropertyChanging();
					this._dnr_anonymous = value;
					this.SendPropertyChanged("dnr_anonymous");
					this.Ondnr_anonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="donor_donation", Storage="_donations", ThisKey="dnr_id", OtherKey="dtn_dnr_id")]
		public EntitySet<donation> donations
		{
			get
			{
				return this._donations;
			}
			set
			{
				this._donations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_donations(donation entity)
		{
			this.SendPropertyChanging();
			entity.donor = this;
		}
		
		private void detach_donations(donation entity)
		{
			this.SendPropertyChanging();
			entity.donor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.triage")]
	public partial class triage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _case_id;
		
		private string _patient_name;
		
		private System.DateTime _arrival;
		
		private System.DateTime _discharge;
		
		private int _em_id;
		
		private int _dr_id;
		
		private EntityRef<doctor> _doctor;
		
		private EntityRef<doctor> _doctor1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncase_idChanging(int value);
    partial void Oncase_idChanged();
    partial void Onpatient_nameChanging(string value);
    partial void Onpatient_nameChanged();
    partial void OnarrivalChanging(System.DateTime value);
    partial void OnarrivalChanged();
    partial void OndischargeChanging(System.DateTime value);
    partial void OndischargeChanged();
    partial void Onem_idChanging(int value);
    partial void Onem_idChanged();
    partial void Ondr_idChanging(int value);
    partial void Ondr_idChanged();
    #endregion
		
		public triage()
		{
			this._doctor = default(EntityRef<doctor>);
			this._doctor1 = default(EntityRef<doctor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_case_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int case_id
		{
			get
			{
				return this._case_id;
			}
			set
			{
				if ((this._case_id != value))
				{
					this.Oncase_idChanging(value);
					this.SendPropertyChanging();
					this._case_id = value;
					this.SendPropertyChanged("case_id");
					this.Oncase_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string patient_name
		{
			get
			{
				return this._patient_name;
			}
			set
			{
				if ((this._patient_name != value))
				{
					this.Onpatient_nameChanging(value);
					this.SendPropertyChanging();
					this._patient_name = value;
					this.SendPropertyChanged("patient_name");
					this.Onpatient_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arrival", DbType="DateTime NOT NULL")]
		public System.DateTime arrival
		{
			get
			{
				return this._arrival;
			}
			set
			{
				if ((this._arrival != value))
				{
					this.OnarrivalChanging(value);
					this.SendPropertyChanging();
					this._arrival = value;
					this.SendPropertyChanged("arrival");
					this.OnarrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discharge", DbType="DateTime NOT NULL")]
		public System.DateTime discharge
		{
			get
			{
				return this._discharge;
			}
			set
			{
				if ((this._discharge != value))
				{
					this.OndischargeChanging(value);
					this.SendPropertyChanging();
					this._discharge = value;
					this.SendPropertyChanged("discharge");
					this.OndischargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_em_id", DbType="Int NOT NULL")]
		public int em_id
		{
			get
			{
				return this._em_id;
			}
			set
			{
				if ((this._em_id != value))
				{
					this.Onem_idChanging(value);
					this.SendPropertyChanging();
					this._em_id = value;
					this.SendPropertyChanged("em_id");
					this.Onem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dr_id", DbType="Int NOT NULL")]
		public int dr_id
		{
			get
			{
				return this._dr_id;
			}
			set
			{
				if ((this._dr_id != value))
				{
					if ((this._doctor.HasLoadedOrAssignedValue || this._doctor1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondr_idChanging(value);
					this.SendPropertyChanging();
					this._dr_id = value;
					this.SendPropertyChanged("dr_id");
					this.Ondr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_triage", Storage="_doctor", ThisKey="dr_id", OtherKey="dr_id", IsForeignKey=true)]
		public doctor doctor
		{
			get
			{
				return this._doctor.Entity;
			}
			set
			{
				doctor previousValue = this._doctor.Entity;
				if (((previousValue != value) 
							|| (this._doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor.Entity = null;
						previousValue.triages.Remove(this);
					}
					this._doctor.Entity = value;
					if ((value != null))
					{
						value.triages.Add(this);
						this._dr_id = value.dr_id;
					}
					else
					{
						this._dr_id = default(int);
					}
					this.SendPropertyChanged("doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_triage1", Storage="_doctor1", ThisKey="dr_id", OtherKey="dr_id", IsForeignKey=true)]
		public doctor doctor1
		{
			get
			{
				return this._doctor1.Entity;
			}
			set
			{
				doctor previousValue = this._doctor1.Entity;
				if (((previousValue != value) 
							|| (this._doctor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor1.Entity = null;
						previousValue.triages1.Remove(this);
					}
					this._doctor1.Entity = value;
					if ((value != null))
					{
						value.triages1.Add(this);
						this._dr_id = value.dr_id;
					}
					else
					{
						this._dr_id = default(int);
					}
					this.SendPropertyChanged("doctor1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlertTable")]
	public partial class AlertTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _alert;
		
		private string _colour;
		
		private int _duration;
		
		private int _alertNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnalertChanging(string value);
    partial void OnalertChanged();
    partial void OncolourChanging(string value);
    partial void OncolourChanged();
    partial void OndurationChanging(int value);
    partial void OndurationChanged();
    partial void OnalertNumberChanging(int value);
    partial void OnalertNumberChanged();
    #endregion
		
		public AlertTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alert", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string alert
		{
			get
			{
				return this._alert;
			}
			set
			{
				if ((this._alert != value))
				{
					this.OnalertChanging(value);
					this.SendPropertyChanging();
					this._alert = value;
					this.SendPropertyChanged("alert");
					this.OnalertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colour", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colour
		{
			get
			{
				return this._colour;
			}
			set
			{
				if ((this._colour != value))
				{
					this.OncolourChanging(value);
					this.SendPropertyChanging();
					this._colour = value;
					this.SendPropertyChanged("colour");
					this.OncolourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="Int NOT NULL")]
		public int duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alertNumber", DbType="Int NOT NULL")]
		public int alertNumber
		{
			get
			{
				return this._alertNumber;
			}
			set
			{
				if ((this._alertNumber != value))
				{
					this.OnalertNumberChanging(value);
					this.SendPropertyChanging();
					this._alertNumber = value;
					this.SendPropertyChanged("alertNumber");
					this.OnalertNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.faq")]
	public partial class faq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _question;
		
		private string _answer;
		
		private string _category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnquestionChanging(string value);
    partial void OnquestionChanged();
    partial void OnanswerChanging(string value);
    partial void OnanswerChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    #endregion
		
		public faq()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string question
		{
			get
			{
				return this._question;
			}
			set
			{
				if ((this._question != value))
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.donation")]
	public partial class donation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dtn_id;
		
		private int _dtn_dnr_id;
		
		private decimal _dtn_amount;
		
		private System.DateTime _dtn_date;
		
		private EntityRef<donor> _donor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondtn_idChanging(int value);
    partial void Ondtn_idChanged();
    partial void Ondtn_dnr_idChanging(int value);
    partial void Ondtn_dnr_idChanged();
    partial void Ondtn_amountChanging(decimal value);
    partial void Ondtn_amountChanged();
    partial void Ondtn_dateChanging(System.DateTime value);
    partial void Ondtn_dateChanged();
    #endregion
		
		public donation()
		{
			this._donor = default(EntityRef<donor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtn_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dtn_id
		{
			get
			{
				return this._dtn_id;
			}
			set
			{
				if ((this._dtn_id != value))
				{
					this.Ondtn_idChanging(value);
					this.SendPropertyChanging();
					this._dtn_id = value;
					this.SendPropertyChanged("dtn_id");
					this.Ondtn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtn_dnr_id", DbType="Int NOT NULL")]
		public int dtn_dnr_id
		{
			get
			{
				return this._dtn_dnr_id;
			}
			set
			{
				if ((this._dtn_dnr_id != value))
				{
					if (this._donor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondtn_dnr_idChanging(value);
					this.SendPropertyChanging();
					this._dtn_dnr_id = value;
					this.SendPropertyChanged("dtn_dnr_id");
					this.Ondtn_dnr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtn_amount", DbType="Decimal(9,2) NOT NULL")]
		public decimal dtn_amount
		{
			get
			{
				return this._dtn_amount;
			}
			set
			{
				if ((this._dtn_amount != value))
				{
					this.Ondtn_amountChanging(value);
					this.SendPropertyChanging();
					this._dtn_amount = value;
					this.SendPropertyChanged("dtn_amount");
					this.Ondtn_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtn_date", DbType="Date NOT NULL")]
		public System.DateTime dtn_date
		{
			get
			{
				return this._dtn_date;
			}
			set
			{
				if ((this._dtn_date != value))
				{
					this.Ondtn_dateChanging(value);
					this.SendPropertyChanging();
					this._dtn_date = value;
					this.SendPropertyChanged("dtn_date");
					this.Ondtn_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="donor_donation", Storage="_donor", ThisKey="dtn_dnr_id", OtherKey="dnr_id", IsForeignKey=true)]
		public donor donor
		{
			get
			{
				return this._donor.Entity;
			}
			set
			{
				donor previousValue = this._donor.Entity;
				if (((previousValue != value) 
							|| (this._donor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._donor.Entity = null;
						previousValue.donations.Remove(this);
					}
					this._donor.Entity = value;
					if ((value != null))
					{
						value.donations.Add(this);
						this._dtn_dnr_id = value.dnr_id;
					}
					else
					{
						this._dtn_dnr_id = default(int);
					}
					this.SendPropertyChanged("donor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.newsTable")]
	public partial class newsTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _stories;
		
		private string _headline;
		
		private System.Data.Linq.Binary _media;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnstoriesChanging(string value);
    partial void OnstoriesChanged();
    partial void OnheadlineChanging(string value);
    partial void OnheadlineChanged();
    partial void OnmediaChanging(System.Data.Linq.Binary value);
    partial void OnmediaChanged();
    #endregion
		
		public newsTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stories", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string stories
		{
			get
			{
				return this._stories;
			}
			set
			{
				if ((this._stories != value))
				{
					this.OnstoriesChanging(value);
					this.SendPropertyChanging();
					this._stories = value;
					this.SendPropertyChanged("stories");
					this.OnstoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_headline", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string headline
		{
			get
			{
				return this._headline;
			}
			set
			{
				if ((this._headline != value))
				{
					this.OnheadlineChanging(value);
					this.SendPropertyChanging();
					this._headline = value;
					this.SendPropertyChanged("headline");
					this.OnheadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_media", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary media
		{
			get
			{
				return this._media;
			}
			set
			{
				if ((this._media != value))
				{
					this.OnmediaChanging(value);
					this.SendPropertyChanging();
					this._media = value;
					this.SendPropertyChanged("media");
					this.OnmediaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.feedbacks")]
	public partial class feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private string _email;
		
		private string _topic;
		
		private string _fbcontent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntopicChanging(string value);
    partial void OntopicChanged();
    partial void OnfbcontentChanging(string value);
    partial void OnfbcontentChanged();
    #endregion
		
		public feedback()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_topic", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string topic
		{
			get
			{
				return this._topic;
			}
			set
			{
				if ((this._topic != value))
				{
					this.OntopicChanging(value);
					this.SendPropertyChanging();
					this._topic = value;
					this.SendPropertyChanged("topic");
					this.OntopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fbcontent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string fbcontent
		{
			get
			{
				return this._fbcontent;
			}
			set
			{
				if ((this._fbcontent != value))
				{
					this.OnfbcontentChanging(value);
					this.SendPropertyChanging();
					this._fbcontent = value;
					this.SendPropertyChanged("fbcontent");
					this.OnfbcontentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.emergency_levels")]
	public partial class emergency_level : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _em_id;
		
		private string _em_description;
		
		private decimal _em_duration_hrs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onem_idChanging(int value);
    partial void Onem_idChanged();
    partial void Onem_descriptionChanging(string value);
    partial void Onem_descriptionChanged();
    partial void Onem_duration_hrsChanging(decimal value);
    partial void Onem_duration_hrsChanged();
    #endregion
		
		public emergency_level()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_em_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int em_id
		{
			get
			{
				return this._em_id;
			}
			set
			{
				if ((this._em_id != value))
				{
					this.Onem_idChanging(value);
					this.SendPropertyChanging();
					this._em_id = value;
					this.SendPropertyChanged("em_id");
					this.Onem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_em_description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string em_description
		{
			get
			{
				return this._em_description;
			}
			set
			{
				if ((this._em_description != value))
				{
					this.Onem_descriptionChanging(value);
					this.SendPropertyChanging();
					this._em_description = value;
					this.SendPropertyChanged("em_description");
					this.Onem_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_em_duration_hrs", DbType="Decimal(4,2) NOT NULL")]
		public decimal em_duration_hrs
		{
			get
			{
				return this._em_duration_hrs;
			}
			set
			{
				if ((this._em_duration_hrs != value))
				{
					this.Onem_duration_hrsChanging(value);
					this.SendPropertyChanging();
					this._em_duration_hrs = value;
					this.SendPropertyChanged("em_duration_hrs");
					this.Onem_duration_hrsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.subscriber")]
	public partial class subscriber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sub_id;
		
		private string _sub_name;
		
		private string _sub_email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsub_idChanging(int value);
    partial void Onsub_idChanged();
    partial void Onsub_nameChanging(string value);
    partial void Onsub_nameChanged();
    partial void Onsub_emailChanging(string value);
    partial void Onsub_emailChanged();
    #endregion
		
		public subscriber()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sub_id
		{
			get
			{
				return this._sub_id;
			}
			set
			{
				if ((this._sub_id != value))
				{
					this.Onsub_idChanging(value);
					this.SendPropertyChanging();
					this._sub_id = value;
					this.SendPropertyChanged("sub_id");
					this.Onsub_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_name", DbType="VarChar(50)")]
		public string sub_name
		{
			get
			{
				return this._sub_name;
			}
			set
			{
				if ((this._sub_name != value))
				{
					this.Onsub_nameChanging(value);
					this.SendPropertyChanging();
					this._sub_name = value;
					this.SendPropertyChanged("sub_name");
					this.Onsub_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_email", DbType="VarChar(50)")]
		public string sub_email
		{
			get
			{
				return this._sub_email;
			}
			set
			{
				if ((this._sub_email != value))
				{
					this.Onsub_emailChanging(value);
					this.SendPropertyChanging();
					this._sub_email = value;
					this.SendPropertyChanged("sub_email");
					this.Onsub_emailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.jobCategory")]
	public partial class jobCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _category;
		
		private EntitySet<Job> _Jobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    #endregion
		
		public jobCategory()
		{
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jobCategory_Job", Storage="_Jobs", ThisKey="Id", OtherKey="category_id")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.jobCategory = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.jobCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.jobApplication")]
	public partial class jobApplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _first_name;
		
		private string _last_name;
		
		private int _job_id;
		
		private string _email;
		
		private string _city;
		
		private string _phone;
		
		private string _address;
		
		private string _cover_letter;
		
		private string _resume;
		
		private System.DateTime _date_posted;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onjob_idChanging(int value);
    partial void Onjob_idChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Oncover_letterChanging(string value);
    partial void Oncover_letterChanged();
    partial void OnresumeChanging(string value);
    partial void OnresumeChanged();
    partial void Ondate_postedChanging(System.DateTime value);
    partial void Ondate_postedChanged();
    #endregion
		
		public jobApplication()
		{
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_id", DbType="Int NOT NULL")]
		public int job_id
		{
			get
			{
				return this._job_id;
			}
			set
			{
				if ((this._job_id != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onjob_idChanging(value);
					this.SendPropertyChanging();
					this._job_id = value;
					this.SendPropertyChanged("job_id");
					this.Onjob_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cover_letter", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cover_letter
		{
			get
			{
				return this._cover_letter;
			}
			set
			{
				if ((this._cover_letter != value))
				{
					this.Oncover_letterChanging(value);
					this.SendPropertyChanging();
					this._cover_letter = value;
					this.SendPropertyChanged("cover_letter");
					this.Oncover_letterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resume", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string resume
		{
			get
			{
				return this._resume;
			}
			set
			{
				if ((this._resume != value))
				{
					this.OnresumeChanging(value);
					this.SendPropertyChanging();
					this._resume = value;
					this.SendPropertyChanged("resume");
					this.OnresumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_posted", DbType="DateTime NOT NULL")]
		public System.DateTime date_posted
		{
			get
			{
				return this._date_posted;
			}
			set
			{
				if ((this._date_posted != value))
				{
					this.Ondate_postedChanging(value);
					this.SendPropertyChanging();
					this._date_posted = value;
					this.SendPropertyChanged("date_posted");
					this.Ondate_postedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_jobApplication", Storage="_Job", ThisKey="job_id", OtherKey="Id", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.jobApplications.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.jobApplications.Add(this);
						this._job_id = value.Id;
					}
					else
					{
						this._job_id = default(int);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.appointments")]
	public partial class appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _apt_id;
		
		private int _dr_id;
		
		private System.DateTime _date_req;
		
		private System.Nullable<System.DateTime> _date_book;
		
		private string _time_book;
		
		private string _pat_name;
		
		private string _pat_phone;
		
		private string _pat_email;
		
		private string _app_status;
		
		private EntityRef<doctor> _doctor;
		
		private EntityRef<doctor> _doctor1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onapt_idChanging(int value);
    partial void Onapt_idChanged();
    partial void Ondr_idChanging(int value);
    partial void Ondr_idChanged();
    partial void Ondate_reqChanging(System.DateTime value);
    partial void Ondate_reqChanged();
    partial void Ondate_bookChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_bookChanged();
    partial void Ontime_bookChanging(string value);
    partial void Ontime_bookChanged();
    partial void Onpat_nameChanging(string value);
    partial void Onpat_nameChanged();
    partial void Onpat_phoneChanging(string value);
    partial void Onpat_phoneChanged();
    partial void Onpat_emailChanging(string value);
    partial void Onpat_emailChanged();
    partial void Onapp_statusChanging(string value);
    partial void Onapp_statusChanged();
    #endregion
		
		public appointment()
		{
			this._doctor = default(EntityRef<doctor>);
			this._doctor1 = default(EntityRef<doctor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apt_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int apt_id
		{
			get
			{
				return this._apt_id;
			}
			set
			{
				if ((this._apt_id != value))
				{
					this.Onapt_idChanging(value);
					this.SendPropertyChanging();
					this._apt_id = value;
					this.SendPropertyChanged("apt_id");
					this.Onapt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dr_id", DbType="Int NOT NULL")]
		public int dr_id
		{
			get
			{
				return this._dr_id;
			}
			set
			{
				if ((this._dr_id != value))
				{
					if ((this._doctor.HasLoadedOrAssignedValue || this._doctor1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondr_idChanging(value);
					this.SendPropertyChanging();
					this._dr_id = value;
					this.SendPropertyChanged("dr_id");
					this.Ondr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_req", DbType="Date NOT NULL")]
		public System.DateTime date_req
		{
			get
			{
				return this._date_req;
			}
			set
			{
				if ((this._date_req != value))
				{
					this.Ondate_reqChanging(value);
					this.SendPropertyChanging();
					this._date_req = value;
					this.SendPropertyChanged("date_req");
					this.Ondate_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_book", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_book
		{
			get
			{
				return this._date_book;
			}
			set
			{
				if ((this._date_book != value))
				{
					this.Ondate_bookChanging(value);
					this.SendPropertyChanging();
					this._date_book = value;
					this.SendPropertyChanged("date_book");
					this.Ondate_bookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_book", DbType="VarChar(50)")]
		public string time_book
		{
			get
			{
				return this._time_book;
			}
			set
			{
				if ((this._time_book != value))
				{
					this.Ontime_bookChanging(value);
					this.SendPropertyChanging();
					this._time_book = value;
					this.SendPropertyChanged("time_book");
					this.Ontime_bookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pat_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pat_name
		{
			get
			{
				return this._pat_name;
			}
			set
			{
				if ((this._pat_name != value))
				{
					this.Onpat_nameChanging(value);
					this.SendPropertyChanging();
					this._pat_name = value;
					this.SendPropertyChanged("pat_name");
					this.Onpat_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pat_phone", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string pat_phone
		{
			get
			{
				return this._pat_phone;
			}
			set
			{
				if ((this._pat_phone != value))
				{
					this.Onpat_phoneChanging(value);
					this.SendPropertyChanging();
					this._pat_phone = value;
					this.SendPropertyChanged("pat_phone");
					this.Onpat_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pat_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pat_email
		{
			get
			{
				return this._pat_email;
			}
			set
			{
				if ((this._pat_email != value))
				{
					this.Onpat_emailChanging(value);
					this.SendPropertyChanging();
					this._pat_email = value;
					this.SendPropertyChanged("pat_email");
					this.Onpat_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string app_status
		{
			get
			{
				return this._app_status;
			}
			set
			{
				if ((this._app_status != value))
				{
					this.Onapp_statusChanging(value);
					this.SendPropertyChanging();
					this._app_status = value;
					this.SendPropertyChanged("app_status");
					this.Onapp_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_appointment", Storage="_doctor", ThisKey="dr_id", OtherKey="dr_id", IsForeignKey=true)]
		public doctor doctor
		{
			get
			{
				return this._doctor.Entity;
			}
			set
			{
				doctor previousValue = this._doctor.Entity;
				if (((previousValue != value) 
							|| (this._doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor.Entity = null;
						previousValue.appointments.Remove(this);
					}
					this._doctor.Entity = value;
					if ((value != null))
					{
						value.appointments.Add(this);
						this._dr_id = value.dr_id;
					}
					else
					{
						this._dr_id = default(int);
					}
					this.SendPropertyChanged("doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_appointment1", Storage="_doctor1", ThisKey="dr_id", OtherKey="dr_id", IsForeignKey=true)]
		public doctor doctor1
		{
			get
			{
				return this._doctor1.Entity;
			}
			set
			{
				doctor previousValue = this._doctor1.Entity;
				if (((previousValue != value) 
							|| (this._doctor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor1.Entity = null;
						previousValue.appointments1.Remove(this);
					}
					this._doctor1.Entity = value;
					if ((value != null))
					{
						value.appointments1.Add(this);
						this._dr_id = value.dr_id;
					}
					else
					{
						this._dr_id = default(int);
					}
					this.SendPropertyChanged("doctor1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
